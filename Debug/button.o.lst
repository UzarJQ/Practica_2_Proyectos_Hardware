   1              		.cpu arm7tdmi
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 18, 4
  11              		.file	"button.c"
  21              	.Ltext0:
  22              		.file 1 "../button.c"
 2235              	button_state:
 2236 0000 00       		.space	1
 2237 0001 000000   		.align	2
 2238              	last_timer_value:
 2239 0004 00000000 		.space	4
 2240              		.data
 2243              	evento:
 2244 0000 01       		.byte	1
 2245              		.bss
 2246              		.align	2
 2247              	led8_count:
 2248 0008 00000000 		.space	4
 2249              		.align	2
 2250              	button_id:
 2251 000c 00000000 		.space	4
 2252              		.text
 2253              		.align	2
 2254              		.global	Eint4567_ISR
 2256              	Eint4567_ISR:
 2257              	.LFB0:
   1:../button.c   **** /*--- Archivo : button.c ---*/
   2:../button.c   **** #include "8led.h"
   3:../button.c   **** #include "led.h"
   4:../button.c   **** #include "44blib.h"
   5:../button.c   **** #include "44b.h"
   6:../button.c   **** #include "def.h"
   7:../button.c   **** #include "button.h"
   8:../button.c   **** #include "cola.h"
   9:../button.c   **** 
  10:../button.c   **** /*--- Variables globales ---*/
  11:../button.c   **** 
  12:../button.c   **** static ButtonState button_state = WAITING;
  13:../button.c   **** static unsigned int last_timer_value = 0;
  14:../button.c   **** static Event evento = PRESSED_IRQ;
  15:../button.c   **** static int led8_count = 0;
  16:../button.c   **** static int button_id;
  17:../button.c   **** 
  18:../button.c   **** /* Declaración de función para ISR de Eint4567 */
  19:../button.c   **** void Eint4567_ISR(void) __attribute__((interrupt("IRQ")));
  20:../button.c   **** 
  21:../button.c   **** /* Código de funciones */
  22:../button.c   **** void Eint4567_ISR(void)
  23:../button.c   **** {
 2258              		.loc 1 23 0
 2259              		.cfi_startproc
 2260              		@ Interrupt Service Routine.
 2261              		@ args = 0, pretend = 0, frame = 8
 2262              		@ frame_needed = 1, uses_anonymous_args = 0
 2263 0000 04C02DE5 		str	ip, [sp, #-4]!
 2264 0004 0DC0A0E1 		mov	ip, sp
 2265              	.LCFI0:
 2266              		.cfi_def_cfa_register 12
 2267 0008 0FD82DE9 		stmfd	sp!, {r0, r1, r2, r3, fp, ip, lr, pc}
 2268 000c 04B04CE2 		sub	fp, ip, #4
 2269              		.cfi_offset 14, -8
 2270              		.cfi_offset 13, -12
 2271              		.cfi_offset 11, -16
 2272              		.cfi_offset 3, -20
 2273              		.cfi_offset 2, -24
 2274              		.cfi_offset 1, -28
 2275              		.cfi_offset 0, -32
 2276              	.LCFI1:
 2277              		.cfi_def_cfa 11, 4
 2278 0010 08D04DE2 		sub	sp, sp, #8
  24:../button.c   ****   rINTMSK |= BIT_EINT4567; // Deshabilitar interrupciones de EINT4567
 2279              		.loc 1 24 0
 2280 0014 60339FE5 		ldr	r3, .L20
 2281 0018 5C239FE5 		ldr	r2, .L20
 2282 001c 002092E5 		ldr	r2, [r2, #0]
 2283 0020 022682E3 		orr	r2, r2, #2097152
 2284 0024 002083E5 		str	r2, [r3, #0]
  25:../button.c   ****   int which_int = rEXTINTPND;
 2285              		.loc 1 25 0
 2286 0028 50339FE5 		ldr	r3, .L20+4
 2287 002c 003093E5 		ldr	r3, [r3, #0]
 2288 0030 24300BE5 		str	r3, [fp, #-36]
  26:../button.c   ****   int exit = 0;
 2289              		.loc 1 26 0
 2290 0034 0030A0E3 		mov	r3, #0
 2291 0038 20300BE5 		str	r3, [fp, #-32]
  27:../button.c   ****   button_state = PRESSED;
 2292              		.loc 1 27 0
 2293 003c 40339FE5 		ldr	r3, .L20+8
 2294 0040 0120A0E3 		mov	r2, #1
 2295 0044 0020C3E5 		strb	r2, [r3, #0]
  28:../button.c   **** 
  29:../button.c   ****   if (button_state == PRESSED)
 2296              		.loc 1 29 0
 2297 0048 34339FE5 		ldr	r3, .L20+8
 2298 004c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2299 0050 010053E3 		cmp	r3, #1
 2300 0054 6000001A 		bne	.L2
  30:../button.c   ****   {
  31:../button.c   ****     while (exit == 0)
 2301              		.loc 1 31 0
 2302 0058 5A0000EA 		b	.L3
 2303              	.L11:
 2304              	.LBB2:
  32:../button.c   ****     {
  33:../button.c   ****       if ((timer1_leer() - last_timer_value) > 20210) // TRP
 2305              		.loc 1 33 0
 2306 005c FEFFFFEB 		bl	timer1_leer
 2307 0060 0030A0E1 		mov	r3, r0
 2308 0064 0320A0E1 		mov	r2, r3
 2309 0068 18339FE5 		ldr	r3, .L20+12
 2310 006c 003093E5 		ldr	r3, [r3, #0]
 2311 0070 022063E0 		rsb	r2, r3, r2
 2312 0074 10339FE5 		ldr	r3, .L20+16
 2313 0078 030052E1 		cmp	r2, r3
 2314 007c 5100009A 		bls	.L3
  34:../button.c   ****       {
  35:../button.c   ****         switch (which_int)
 2315              		.loc 1 35 0
 2316 0080 24301BE5 		ldr	r3, [fp, #-36]
 2317 0084 040053E3 		cmp	r3, #4
 2318 0088 0200000A 		beq	.L5
 2319 008c 080053E3 		cmp	r3, #8
 2320 0090 1900000A 		beq	.L6
  36:../button.c   ****         {
  37:../button.c   ****         case 4:
  38:../button.c   ****           led8_count++;
  39:../button.c   ****           button_id = 6;
  40:../button.c   ****           last_timer_value = timer1_leer();
  41:../button.c   ****           push_debug(evento, button_id, last_timer_value);
  42:../button.c   ****           break;
  43:../button.c   ****         case 8:
  44:../button.c   ****           led8_count--;
  45:../button.c   ****           button_id = 7;
  46:../button.c   ****           last_timer_value = timer1_leer();
  47:../button.c   ****           push_debug(evento, button_id, last_timer_value);
  48:../button.c   ****           break;
  49:../button.c   ****         default:
  50:../button.c   ****           break;
 2321              		.loc 1 50 0
 2322 0094 310000EA 		b	.L7
 2323              	.L5:
  38:../button.c   ****           led8_count++;
 2324              		.loc 1 38 0
 2325 0098 F0329FE5 		ldr	r3, .L20+20
 2326 009c 003093E5 		ldr	r3, [r3, #0]
 2327 00a0 012083E2 		add	r2, r3, #1
 2328 00a4 E4329FE5 		ldr	r3, .L20+20
 2329 00a8 002083E5 		str	r2, [r3, #0]
  39:../button.c   ****           button_id = 6;
 2330              		.loc 1 39 0
 2331 00ac E0329FE5 		ldr	r3, .L20+24
 2332 00b0 0620A0E3 		mov	r2, #6
 2333 00b4 002083E5 		str	r2, [r3, #0]
  40:../button.c   ****           last_timer_value = timer1_leer();
 2334              		.loc 1 40 0
 2335 00b8 FEFFFFEB 		bl	timer1_leer
 2336 00bc 0030A0E1 		mov	r3, r0
 2337 00c0 0320A0E1 		mov	r2, r3
 2338 00c4 BC329FE5 		ldr	r3, .L20+12
 2339 00c8 002083E5 		str	r2, [r3, #0]
  41:../button.c   ****           push_debug(evento, button_id, last_timer_value);
 2340              		.loc 1 41 0
 2341 00cc C4329FE5 		ldr	r3, .L20+28
 2342 00d0 0010D3E5 		ldrb	r1, [r3, #0]	@ zero_extendqisi2
 2343 00d4 B8329FE5 		ldr	r3, .L20+24
 2344 00d8 003093E5 		ldr	r3, [r3, #0]
 2345 00dc 0320A0E1 		mov	r2, r3
 2346 00e0 A0329FE5 		ldr	r3, .L20+12
 2347 00e4 003093E5 		ldr	r3, [r3, #0]
 2348 00e8 0100A0E1 		mov	r0, r1
 2349 00ec 0210A0E1 		mov	r1, r2
 2350 00f0 0320A0E1 		mov	r2, r3
 2351 00f4 FEFFFFEB 		bl	push_debug
  42:../button.c   ****           break;
 2352              		.loc 1 42 0
 2353 00f8 180000EA 		b	.L7
 2354              	.L6:
  44:../button.c   ****           led8_count--;
 2355              		.loc 1 44 0
 2356 00fc 8C329FE5 		ldr	r3, .L20+20
 2357 0100 003093E5 		ldr	r3, [r3, #0]
 2358 0104 012043E2 		sub	r2, r3, #1
 2359 0108 80329FE5 		ldr	r3, .L20+20
 2360 010c 002083E5 		str	r2, [r3, #0]
  45:../button.c   ****           button_id = 7;
 2361              		.loc 1 45 0
 2362 0110 7C329FE5 		ldr	r3, .L20+24
 2363 0114 0720A0E3 		mov	r2, #7
 2364 0118 002083E5 		str	r2, [r3, #0]
  46:../button.c   ****           last_timer_value = timer1_leer();
 2365              		.loc 1 46 0
 2366 011c FEFFFFEB 		bl	timer1_leer
 2367 0120 0030A0E1 		mov	r3, r0
 2368 0124 0320A0E1 		mov	r2, r3
 2369 0128 58329FE5 		ldr	r3, .L20+12
 2370 012c 002083E5 		str	r2, [r3, #0]
  47:../button.c   ****           push_debug(evento, button_id, last_timer_value);
 2371              		.loc 1 47 0
 2372 0130 60329FE5 		ldr	r3, .L20+28
 2373 0134 0010D3E5 		ldrb	r1, [r3, #0]	@ zero_extendqisi2
 2374 0138 54329FE5 		ldr	r3, .L20+24
 2375 013c 003093E5 		ldr	r3, [r3, #0]
 2376 0140 0320A0E1 		mov	r2, r3
 2377 0144 3C329FE5 		ldr	r3, .L20+12
 2378 0148 003093E5 		ldr	r3, [r3, #0]
 2379 014c 0100A0E1 		mov	r0, r1
 2380 0150 0210A0E1 		mov	r1, r2
 2381 0154 0320A0E1 		mov	r2, r3
 2382 0158 FEFFFFEB 		bl	push_debug
  48:../button.c   ****           break;
 2383              		.loc 1 48 0
 2384 015c 0000A0E1 		mov	r0, r0	@ nop
 2385              	.L7:
  51:../button.c   ****         }
  52:../button.c   **** 
  53:../button.c   ****         if (!(rPDATG & 0x40) || !(rPDATG & 0x80))
 2386              		.loc 1 53 0
 2387 0160 34329FE5 		ldr	r3, .L20+32
 2388 0164 003093E5 		ldr	r3, [r3, #0]
 2389 0168 403003E2 		and	r3, r3, #64
 2390 016c 000053E3 		cmp	r3, #0
 2391 0170 0400000A 		beq	.L8
 2392              		.loc 1 53 0 is_stmt 0 discriminator 1
 2393 0174 20329FE5 		ldr	r3, .L20+32
 2394 0178 003093E5 		ldr	r3, [r3, #0]
 2395 017c 803003E2 		and	r3, r3, #128
 2396 0180 000053E3 		cmp	r3, #0
 2397 0184 0500001A 		bne	.L9
 2398              	.L8:
  54:../button.c   ****         {
  55:../button.c   ****           button_state = MANTAINED;
 2399              		.loc 1 55 0 is_stmt 1
 2400 0188 F4319FE5 		ldr	r3, .L20+8
 2401 018c 0320A0E3 		mov	r2, #3
 2402 0190 0020C3E5 		strb	r2, [r3, #0]
  56:../button.c   ****           exit = 1;
 2403              		.loc 1 56 0
 2404 0194 0130A0E3 		mov	r3, #1
 2405 0198 20300BE5 		str	r3, [fp, #-32]
 2406 019c 040000EA 		b	.L10
 2407              	.L9:
  57:../button.c   ****         }
  58:../button.c   ****         else
  59:../button.c   ****         {
  60:../button.c   ****           button_state = RELEASED;
 2408              		.loc 1 60 0
 2409 01a0 DC319FE5 		ldr	r3, .L20+8
 2410 01a4 0220A0E3 		mov	r2, #2
 2411 01a8 0020C3E5 		strb	r2, [r3, #0]
  61:../button.c   ****           exit = 1;
 2412              		.loc 1 61 0
 2413 01ac 0130A0E3 		mov	r3, #1
 2414 01b0 20300BE5 		str	r3, [fp, #-32]
 2415              	.L10:
  62:../button.c   ****         }
  63:../button.c   ****         last_timer_value = timer1_leer();
 2416              		.loc 1 63 0
 2417 01b4 FEFFFFEB 		bl	timer1_leer
 2418 01b8 0030A0E1 		mov	r3, r0
 2419 01bc 0320A0E1 		mov	r2, r3
 2420 01c0 C0319FE5 		ldr	r3, .L20+12
 2421 01c4 002083E5 		str	r2, [r3, #0]
 2422              	.L3:
 2423              	.LBE2:
  31:../button.c   ****     while (exit == 0)
 2424              		.loc 1 31 0 discriminator 1
 2425 01c8 20301BE5 		ldr	r3, [fp, #-32]
 2426 01cc 000053E3 		cmp	r3, #0
 2427 01d0 A1FFFF0A 		beq	.L11
  64:../button.c   ****       }
  65:../button.c   ****     }
  66:../button.c   ****     exit = 0;
 2428              		.loc 1 66 0
 2429 01d4 0030A0E3 		mov	r3, #0
 2430 01d8 20300BE5 		str	r3, [fp, #-32]
 2431              	.L2:
  67:../button.c   ****   }
  68:../button.c   **** 
  69:../button.c   ****   if (button_state == MANTAINED)
 2432              		.loc 1 69 0
 2433 01dc A0319FE5 		ldr	r3, .L20+8
 2434 01e0 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2435 01e4 030053E3 		cmp	r3, #3
 2436 01e8 2700001A 		bne	.L12
 2437              	.LBB3:
  70:../button.c   ****   {
  71:../button.c   ****     while (exit == 0)
 2438              		.loc 1 71 0
 2439 01ec 1C0000EA 		b	.L13
 2440              	.L16:
 2441              	.LBB4:
  72:../button.c   ****     {
  73:../button.c   ****       if ((timer1_leer() - last_timer_value) > 50000) // Monitorizar cada 50 ms
 2442              		.loc 1 73 0
 2443 01f0 FEFFFFEB 		bl	timer1_leer
 2444 01f4 0030A0E1 		mov	r3, r0
 2445 01f8 0320A0E1 		mov	r2, r3
 2446 01fc 84319FE5 		ldr	r3, .L20+12
 2447 0200 003093E5 		ldr	r3, [r3, #0]
 2448 0204 022063E0 		rsb	r2, r3, r2
 2449 0208 90319FE5 		ldr	r3, .L20+36
 2450 020c 030052E1 		cmp	r2, r3
 2451 0210 0E00009A 		bls	.L14
  74:../button.c   ****       {
  75:../button.c   ****         if ((rPDATG & 0x40) || (rPDATG & 0x80))
 2452              		.loc 1 75 0
 2453 0214 80319FE5 		ldr	r3, .L20+32
 2454 0218 003093E5 		ldr	r3, [r3, #0]
 2455 021c 403003E2 		and	r3, r3, #64
 2456 0220 000053E3 		cmp	r3, #0
 2457 0224 0400001A 		bne	.L15
 2458              		.loc 1 75 0 is_stmt 0 discriminator 1
 2459 0228 6C319FE5 		ldr	r3, .L20+32
 2460 022c 003093E5 		ldr	r3, [r3, #0]
 2461 0230 803003E2 		and	r3, r3, #128
 2462 0234 000053E3 		cmp	r3, #0
 2463 0238 0400000A 		beq	.L14
 2464              	.L15:
  76:../button.c   ****         {
  77:../button.c   ****           button_state = RELEASED;
 2465              		.loc 1 77 0 is_stmt 1
 2466 023c 40319FE5 		ldr	r3, .L20+8
 2467 0240 0220A0E3 		mov	r2, #2
 2468 0244 0020C3E5 		strb	r2, [r3, #0]
  78:../button.c   ****           exit = 1;
 2469              		.loc 1 78 0
 2470 0248 0130A0E3 		mov	r3, #1
 2471 024c 20300BE5 		str	r3, [fp, #-32]
 2472              	.L14:
  79:../button.c   ****         }
  80:../button.c   ****       }
  81:../button.c   ****       last_timer_value = timer1_leer();
 2473              		.loc 1 81 0
 2474 0250 FEFFFFEB 		bl	timer1_leer
 2475 0254 0030A0E1 		mov	r3, r0
 2476 0258 0320A0E1 		mov	r2, r3
 2477 025c 24319FE5 		ldr	r3, .L20+12
 2478 0260 002083E5 		str	r2, [r3, #0]
 2479              	.L13:
 2480              	.LBE4:
  71:../button.c   ****     while (exit == 0)
 2481              		.loc 1 71 0 discriminator 1
 2482 0264 20301BE5 		ldr	r3, [fp, #-32]
 2483 0268 000053E3 		cmp	r3, #0
 2484 026c DFFFFF0A 		beq	.L16
  82:../button.c   ****     }
  83:../button.c   ****     exit = 0;
 2485              		.loc 1 83 0
 2486 0270 0030A0E3 		mov	r3, #0
 2487 0274 20300BE5 		str	r3, [fp, #-32]
  84:../button.c   ****     last_timer_value = timer1_leer();
 2488              		.loc 1 84 0
 2489 0278 FEFFFFEB 		bl	timer1_leer
 2490 027c 0030A0E1 		mov	r3, r0
 2491 0280 0320A0E1 		mov	r2, r3
 2492 0284 FC309FE5 		ldr	r3, .L20+12
 2493 0288 002083E5 		str	r2, [r3, #0]
 2494              	.L12:
 2495              	.LBE3:
  85:../button.c   ****   }
  86:../button.c   **** 
  87:../button.c   ****   if (button_state == RELEASED)
 2496              		.loc 1 87 0
 2497 028c F0309FE5 		ldr	r3, .L20+8
 2498 0290 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2499 0294 020053E3 		cmp	r3, #2
 2500 0298 2100001A 		bne	.L17
  88:../button.c   ****   {
  89:../button.c   ****     while (exit == 0)
 2501              		.loc 1 89 0
 2502 029c 1B0000EA 		b	.L18
 2503              	.L19:
 2504              	.LBB5:
  90:../button.c   ****     {
  91:../button.c   ****       if ((timer1_leer() - last_timer_value) > 20210) // TRD
 2505              		.loc 1 91 0
 2506 02a0 FEFFFFEB 		bl	timer1_leer
 2507 02a4 0030A0E1 		mov	r3, r0
 2508 02a8 0320A0E1 		mov	r2, r3
 2509 02ac D4309FE5 		ldr	r3, .L20+12
 2510 02b0 003093E5 		ldr	r3, [r3, #0]
 2511 02b4 022063E0 		rsb	r2, r3, r2
 2512 02b8 CC309FE5 		ldr	r3, .L20+16
 2513 02bc 030052E1 		cmp	r2, r3
 2514 02c0 1200009A 		bls	.L18
  92:../button.c   ****       {
  93:../button.c   ****         evento = RELEASED_IRQ;
 2515              		.loc 1 93 0
 2516 02c4 CC309FE5 		ldr	r3, .L20+28
 2517 02c8 0320A0E3 		mov	r2, #3
 2518 02cc 0020C3E5 		strb	r2, [r3, #0]
  94:../button.c   ****         push_debug(evento, button_id, last_timer_value);
 2519              		.loc 1 94 0
 2520 02d0 C0309FE5 		ldr	r3, .L20+28
 2521 02d4 0010D3E5 		ldrb	r1, [r3, #0]	@ zero_extendqisi2
 2522 02d8 B4309FE5 		ldr	r3, .L20+24
 2523 02dc 003093E5 		ldr	r3, [r3, #0]
 2524 02e0 0320A0E1 		mov	r2, r3
 2525 02e4 9C309FE5 		ldr	r3, .L20+12
 2526 02e8 003093E5 		ldr	r3, [r3, #0]
 2527 02ec 0100A0E1 		mov	r0, r1
 2528 02f0 0210A0E1 		mov	r1, r2
 2529 02f4 0320A0E1 		mov	r2, r3
 2530 02f8 FEFFFFEB 		bl	push_debug
  95:../button.c   ****         exit = 1;
 2531              		.loc 1 95 0
 2532 02fc 0130A0E3 		mov	r3, #1
 2533 0300 20300BE5 		str	r3, [fp, #-32]
  96:../button.c   ****         button_state = WAITING;
 2534              		.loc 1 96 0
 2535 0304 78309FE5 		ldr	r3, .L20+8
 2536 0308 0020A0E3 		mov	r2, #0
 2537 030c 0020C3E5 		strb	r2, [r3, #0]
 2538              	.L18:
 2539              	.LBE5:
  89:../button.c   ****     while (exit == 0)
 2540              		.loc 1 89 0 discriminator 1
 2541 0310 20301BE5 		ldr	r3, [fp, #-32]
 2542 0314 000053E3 		cmp	r3, #0
 2543 0318 E0FFFF0A 		beq	.L19
  97:../button.c   ****       }
  98:../button.c   ****     }
  99:../button.c   ****     exit = 0;
 2544              		.loc 1 99 0
 2545 031c 0030A0E3 		mov	r3, #0
 2546 0320 20300BE5 		str	r3, [fp, #-32]
 2547              	.L17:
 100:../button.c   ****   }
 101:../button.c   **** 
 102:../button.c   ****   D8Led_symbol(led8_count & 0xf);
 2548              		.loc 1 102 0
 2549 0324 64309FE5 		ldr	r3, .L20+20
 2550 0328 003093E5 		ldr	r3, [r3, #0]
 2551 032c 0F3003E2 		and	r3, r3, #15
 2552 0330 0300A0E1 		mov	r0, r3
 2553 0334 FEFFFFEB 		bl	D8Led_symbol
 103:../button.c   ****   rEXTINTPND = 0xf;           // Borra los bits en EXTINTPND
 2554              		.loc 1 103 0
 2555 0338 40309FE5 		ldr	r3, .L20+4
 2556 033c 0F20A0E3 		mov	r2, #15
 2557 0340 002083E5 		str	r2, [r3, #0]
 104:../button.c   ****   rI_ISPC |= BIT_EINT4567;    // Borra el bit pendiente en INTPND
 2558              		.loc 1 104 0
 2559 0344 58309FE5 		ldr	r3, .L20+40
 2560 0348 54209FE5 		ldr	r2, .L20+40
 2561 034c 002092E5 		ldr	r2, [r2, #0]
 2562 0350 022682E3 		orr	r2, r2, #2097152
 2563 0354 002083E5 		str	r2, [r3, #0]
 105:../button.c   ****   rINTMSK &= ~(BIT_EINT4567); // Habilitar interrupciones de EINT4567
 2564              		.loc 1 105 0
 2565 0358 1C309FE5 		ldr	r3, .L20
 2566 035c 18209FE5 		ldr	r2, .L20
 2567 0360 002092E5 		ldr	r2, [r2, #0]
 2568 0364 0226C2E3 		bic	r2, r2, #2097152
 2569 0368 002083E5 		str	r2, [r3, #0]
 106:../button.c   **** }
 2570              		.loc 1 106 0
 2571 036c 1CD04BE2 		sub	sp, fp, #28
 2572 0370 0F689DE8 		ldmfd	sp, {r0, r1, r2, r3, fp, sp, lr}
 2573 0374 04C09DE4 		ldmfd	sp!, {ip}
 2574 0378 04F05EE2 		subs	pc, lr, #4
 2575              	.L21:
 2576              		.align	2
 2577              	.L20:
 2578 037c 0C00E001 		.word	31457292
 2579 0380 5400D201 		.word	30539860
 2580 0384 00000000 		.word	button_state
 2581 0388 04000000 		.word	last_timer_value
 2582 038c F24E0000 		.word	20210
 2583 0390 08000000 		.word	led8_count
 2584 0394 0C000000 		.word	button_id
 2585 0398 00000000 		.word	evento
 2586 039c 4400D201 		.word	30539844
 2587 03a0 50C30000 		.word	50000
 2588 03a4 2400E001 		.word	31457316
 2589              		.cfi_endproc
 2590              	.LFE0:
 2592              		.align	2
 2593              		.global	Eint4567_init
 2595              	Eint4567_init:
 2596              	.LFB1:
 107:../button.c   **** 
 108:../button.c   **** void Eint4567_init(void)
 109:../button.c   **** {
 2597              		.loc 1 109 0
 2598              		.cfi_startproc
 2599              		@ Function supports interworking.
 2600              		@ args = 0, pretend = 0, frame = 0
 2601              		@ frame_needed = 1, uses_anonymous_args = 0
 2602 03a8 0DC0A0E1 		mov	ip, sp
 2603              	.LCFI2:
 2604              		.cfi_def_cfa_register 12
 2605 03ac 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2606 03b0 04B04CE2 		sub	fp, ip, #4
 2607              		.cfi_offset 14, -8
 2608              		.cfi_offset 13, -12
 2609              		.cfi_offset 11, -16
 2610              	.LCFI3:
 2611              		.cfi_def_cfa 11, 4
 110:../button.c   ****   // Configuración del controlador de interrupciones
 111:../button.c   ****   rI_ISPC = 0x3ffffff;        // Borra INTPND escribiendo 1s en I_ISPC
 2612              		.loc 1 111 0
 2613 03b4 A4309FE5 		ldr	r3, .L23
 2614 03b8 3F23E0E3 		mvn	r2, #-67108864
 2615 03bc 002083E5 		str	r2, [r3, #0]
 112:../button.c   ****   rEXTINTPND = 0xf;           // Borra EXTINTPND escribiendo 1s en el propio registro
 2616              		.loc 1 112 0
 2617 03c0 9C309FE5 		ldr	r3, .L23+4
 2618 03c4 0F20A0E3 		mov	r2, #15
 2619 03c8 002083E5 		str	r2, [r3, #0]
 113:../button.c   ****   rINTMOD = 0x0;              // Configura las líneas como de tipo IRQ
 2620              		.loc 1 113 0
 2621 03cc 94309FE5 		ldr	r3, .L23+8
 2622 03d0 0020A0E3 		mov	r2, #0
 2623 03d4 002083E5 		str	r2, [r3, #0]
 114:../button.c   ****   rINTCON = 0x1;              // Habilita interrupciones vectorizadas y la línea IRQ (FIQ no)
 2624              		.loc 1 114 0
 2625 03d8 1E36A0E3 		mov	r3, #31457280
 2626 03dc 0120A0E3 		mov	r2, #1
 2627 03e0 002083E5 		str	r2, [r3, #0]
 115:../button.c   ****   rINTMSK &= ~(BIT_EINT4567); // Habilitar interrupciones de EINT4567
 2628              		.loc 1 115 0
 2629 03e4 80309FE5 		ldr	r3, .L23+12
 2630 03e8 7C209FE5 		ldr	r2, .L23+12
 2631 03ec 002092E5 		ldr	r2, [r2, #0]
 2632 03f0 0226C2E3 		bic	r2, r2, #2097152
 2633 03f4 002083E5 		str	r2, [r3, #0]
 116:../button.c   **** 
 117:../button.c   ****   // Establece la rutina de servicio para Eint4567
 118:../button.c   ****   pISR_EINT4567 = (unsigned)Eint4567_ISR;
 2634              		.loc 1 118 0
 2635 03f8 70309FE5 		ldr	r3, .L23+16
 2636 03fc 70209FE5 		ldr	r2, .L23+20
 2637 0400 002083E5 		str	r2, [r3, #0]
 119:../button.c   **** 
 120:../button.c   ****   // Configuración del puerto G
 121:../button.c   ****   rPCONG = 0xffff;                                                        // Establece la función 
 2638              		.loc 1 121 0
 2639 0404 6C309FE5 		ldr	r3, .L23+24
 2640 0408 6C209FE5 		ldr	r2, .L23+28
 2641 040c 002083E5 		str	r2, [r3, #0]
 122:../button.c   ****   rPUPG = 0x0;                                                            // Habilita el "pull-up" 
 2642              		.loc 1 122 0
 2643 0410 68309FE5 		ldr	r3, .L23+32
 2644 0414 0020A0E3 		mov	r2, #0
 2645 0418 002083E5 		str	r2, [r3, #0]
 123:../button.c   ****   rEXTINT = rEXTINT | (0x2 << 0) | (0x2 << 4) | (0x2 << 8) | (0x2 << 12); // Configura las líneas 
 2646              		.loc 1 123 0
 2647 041c 60209FE5 		ldr	r2, .L23+36
 2648 0420 5C309FE5 		ldr	r3, .L23+36
 2649 0424 003093E5 		ldr	r3, [r3, #0]
 2650 0428 223C83E3 		orr	r3, r3, #8704
 2651 042c 223083E3 		orr	r3, r3, #34
 2652 0430 003082E5 		str	r3, [r2, #0]
 124:../button.c   **** 
 125:../button.c   ****   rEXTINTPND = 0xf;        // borra los bits en EXTINTPND
 2653              		.loc 1 125 0
 2654 0434 28309FE5 		ldr	r3, .L23+4
 2655 0438 0F20A0E3 		mov	r2, #15
 2656 043c 002083E5 		str	r2, [r3, #0]
 126:../button.c   ****   rI_ISPC |= BIT_EINT4567; // borra el bit pendiente en INTPND
 2657              		.loc 1 126 0
 2658 0440 18309FE5 		ldr	r3, .L23
 2659 0444 14209FE5 		ldr	r2, .L23
 2660 0448 002092E5 		ldr	r2, [r2, #0]
 2661 044c 022682E3 		orr	r2, r2, #2097152
 2662 0450 002083E5 		str	r2, [r3, #0]
 127:../button.c   **** }
 2663              		.loc 1 127 0
 2664 0454 0CD04BE2 		sub	sp, fp, #12
 2665 0458 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2666 045c 1EFF2FE1 		bx	lr
 2667              	.L24:
 2668              		.align	2
 2669              	.L23:
 2670 0460 2400E001 		.word	31457316
 2671 0464 5400D201 		.word	30539860
 2672 0468 0800E001 		.word	31457288
 2673 046c 0C00E001 		.word	31457292
 2674 0470 74FF7F0C 		.word	209715060
 2675 0474 00000000 		.word	Eint4567_ISR
 2676 0478 4000D201 		.word	30539840
 2677 047c FFFF0000 		.word	65535
 2678 0480 4800D201 		.word	30539848
 2679 0484 5000D201 		.word	30539856
 2680              		.cfi_endproc
 2681              	.LFE1:
 2683              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 button.c
C:\Users\Jorge\AppData\Local\Temp\ccN8AIXu.s:2235   .bss:00000000 button_state
C:\Users\Jorge\AppData\Local\Temp\ccN8AIXu.s:2236   .bss:00000000 $d
C:\Users\Jorge\AppData\Local\Temp\ccN8AIXu.s:2238   .bss:00000004 last_timer_value
C:\Users\Jorge\AppData\Local\Temp\ccN8AIXu.s:2243   .data:00000000 evento
C:\Users\Jorge\AppData\Local\Temp\ccN8AIXu.s:2247   .bss:00000008 led8_count
C:\Users\Jorge\AppData\Local\Temp\ccN8AIXu.s:2250   .bss:0000000c button_id
C:\Users\Jorge\AppData\Local\Temp\ccN8AIXu.s:2253   .text:00000000 $a
C:\Users\Jorge\AppData\Local\Temp\ccN8AIXu.s:2256   .text:00000000 Eint4567_ISR
C:\Users\Jorge\AppData\Local\Temp\ccN8AIXu.s:2578   .text:0000037c $d
C:\Users\Jorge\AppData\Local\Temp\ccN8AIXu.s:2592   .text:000003a8 $a
C:\Users\Jorge\AppData\Local\Temp\ccN8AIXu.s:2595   .text:000003a8 Eint4567_init
C:\Users\Jorge\AppData\Local\Temp\ccN8AIXu.s:2670   .text:00000460 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
timer1_leer
push_debug
D8Led_symbol
