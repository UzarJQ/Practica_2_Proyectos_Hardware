   1              		.cpu arm7tdmi
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 18, 4
  11              		.file	"timer.c"
  21              	.Ltext0:
  22              		.file 1 "../timer.c"
 2157              		.align	2
 2160              	timer1_num_int:
 2161 0000 00000000 		.space	4
 2162              		.global	timer_event
 2163              		.data
 2166              	timer_event:
 2167 0000 05       		.byte	5
 2168              		.global	led_event_counter
 2169              		.bss
 2170              		.align	2
 2173              	led_event_counter:
 2174 0004 00000000 		.space	4
 2175              		.text
 2176              		.align	2
 2177              		.global	timer_ISR
 2179              	timer_ISR:
 2180              	.LFB0:
   1:../timer.c    **** /*********************************************************************************************
   2:../timer.c    ****  * Fichero:		timer.c
   3:../timer.c    ****  * Autor:
   4:../timer.c    ****  * Descrip:		funciones de control del timer0 del s3c44b0x
   5:../timer.c    ****  * Version:
   6:../timer.c    ****  *********************************************************************************************/
   7:../timer.c    **** 
   8:../timer.c    **** /*--- ficheros de cabecera ---*/
   9:../timer.c    **** #include "timer.h"
  10:../timer.c    **** #include "44b.h"
  11:../timer.c    **** #include "44blib.h"
  12:../timer.c    **** #include "eventos.h"
  13:../timer.c    **** 
  14:../timer.c    **** /*--- variables globales ---*/
  15:../timer.c    **** extern int switch_leds;
  16:../timer.c    **** int timer1_num_int = 0; // Contador de periodos completos por el timer1
  17:../timer.c    **** Event timer_event = TIMER1_IRQ;
  18:../timer.c    **** volatile int led_event_counter = 0;
  19:../timer.c    **** 
  20:../timer.c    **** /* declaraci�n de funci�n que es rutina de servicio de interrupci�n
  21:../timer.c    **** https://gcc.gnu.org/onlinedocs/gcc/ARM-Function-Attributes.html */
  22:../timer.c    **** void timer_ISR(void) __attribute__((interrupt("IRQ")));
  23:../timer.c    **** void timer1_ISR(void) __attribute__((interrupt("IRQ")));
  24:../timer.c    **** void timer2_ISR(void) __attribute__((interrupt("IRQ")));
  25:../timer.c    **** 
  26:../timer.c    **** /*--- codigo de las funciones ---*/
  27:../timer.c    **** void timer_ISR(void)
  28:../timer.c    **** {
 2181              		.loc 1 28 0
 2182              		.cfi_startproc
 2183              		@ Interrupt Service Routine.
 2184              		@ args = 0, pretend = 0, frame = 0
 2185              		@ frame_needed = 1, uses_anonymous_args = 0
 2186 0000 04C02DE5 		str	ip, [sp, #-4]!
 2187 0004 0DC0A0E1 		mov	ip, sp
 2188              	.LCFI0:
 2189              		.cfi_def_cfa_register 12
 2190 0008 0CD82DE9 		stmfd	sp!, {r2, r3, fp, ip, lr, pc}
 2191 000c 04B04CE2 		sub	fp, ip, #4
 2192              		.cfi_offset 14, -8
 2193              		.cfi_offset 13, -12
 2194              		.cfi_offset 11, -16
 2195              		.cfi_offset 3, -20
 2196              		.cfi_offset 2, -24
 2197              	.LCFI1:
 2198              		.cfi_def_cfa 11, 4
  29:../timer.c    **** 	switch_leds = 1;
 2199              		.loc 1 29 0
 2200 0010 28309FE5 		ldr	r3, .L2
 2201 0014 0120A0E3 		mov	r2, #1
 2202 0018 002083E5 		str	r2, [r3, #0]
  30:../timer.c    **** 
  31:../timer.c    **** 	/* borrar bit en I_ISPC para desactivar la solicitud de interrupci�n*/
  32:../timer.c    **** 	rI_ISPC |= BIT_TIMER0; // BIT_TIMER0 est� definido en 44b.h y pone un uno en el bit 13 que corre
 2203              		.loc 1 32 0
 2204 001c 20309FE5 		ldr	r3, .L2+4
 2205 0020 1C209FE5 		ldr	r2, .L2+4
 2206 0024 002092E5 		ldr	r2, [r2, #0]
 2207 0028 022A82E3 		orr	r2, r2, #8192
 2208 002c 002083E5 		str	r2, [r3, #0]
  33:../timer.c    **** }
 2209              		.loc 1 33 0
 2210 0030 14D04BE2 		sub	sp, fp, #20
 2211 0034 0C689DE8 		ldmfd	sp, {r2, r3, fp, sp, lr}
 2212 0038 04C09DE4 		ldmfd	sp!, {ip}
 2213 003c 04F05EE2 		subs	pc, lr, #4
 2214              	.L3:
 2215              		.align	2
 2216              	.L2:
 2217 0040 00000000 		.word	switch_leds
 2218 0044 2400E001 		.word	31457316
 2219              		.cfi_endproc
 2220              	.LFE0:
 2222              		.align	2
 2223              		.global	timer_init
 2225              	timer_init:
 2226              	.LFB1:
  34:../timer.c    **** 
  35:../timer.c    **** void timer_init(void)
  36:../timer.c    **** {
 2227              		.loc 1 36 0
 2228              		.cfi_startproc
 2229              		@ Function supports interworking.
 2230              		@ args = 0, pretend = 0, frame = 0
 2231              		@ frame_needed = 1, uses_anonymous_args = 0
 2232 0048 0DC0A0E1 		mov	ip, sp
 2233              	.LCFI2:
 2234              		.cfi_def_cfa_register 12
 2235 004c 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2236 0050 04B04CE2 		sub	fp, ip, #4
 2237              		.cfi_offset 14, -8
 2238              		.cfi_offset 13, -12
 2239              		.cfi_offset 11, -16
 2240              	.LCFI3:
 2241              		.cfi_def_cfa 11, 4
  37:../timer.c    **** 	/* Configuracion controlador de interrupciones */
  38:../timer.c    **** 	rINTMOD = 0x0;						// Configura las lineas como de tipo IRQ
 2242              		.loc 1 38 0
 2243 0054 84309FE5 		ldr	r3, .L5
 2244 0058 0020A0E3 		mov	r2, #0
 2245 005c 002083E5 		str	r2, [r3, #0]
  39:../timer.c    **** 	rINTCON = 0x1;						// Habilita int. vectorizadas y la linea IRQ (FIQ no)
 2246              		.loc 1 39 0
 2247 0060 1E36A0E3 		mov	r3, #31457280
 2248 0064 0120A0E3 		mov	r2, #1
 2249 0068 002083E5 		str	r2, [r3, #0]
  40:../timer.c    **** 	rINTMSK &= ~(BIT_TIMER0); // habilitamos en vector de mascaras de interrupcion el Timer0 (bits 26 
 2250              		.loc 1 40 0
 2251 006c 70309FE5 		ldr	r3, .L5+4
 2252 0070 6C209FE5 		ldr	r2, .L5+4
 2253 0074 002092E5 		ldr	r2, [r2, #0]
 2254 0078 022AC2E3 		bic	r2, r2, #8192
 2255 007c 002083E5 		str	r2, [r3, #0]
  41:../timer.c    **** 
  42:../timer.c    **** 	/* Establece la rutina de servicio para TIMER0 */
  43:../timer.c    **** 	pISR_TIMER0 = (unsigned)timer_ISR;
 2256              		.loc 1 43 0
 2257 0080 60309FE5 		ldr	r3, .L5+8
 2258 0084 60209FE5 		ldr	r2, .L5+12
 2259 0088 002083E5 		str	r2, [r3, #0]
  44:../timer.c    **** 
  45:../timer.c    **** 	/* Configura el Timer0 */
  46:../timer.c    **** 	rTCFG0 = 255;		// ajusta el preescalado
 2260              		.loc 1 46 0
 2261 008c 5C309FE5 		ldr	r3, .L5+16
 2262 0090 FF20A0E3 		mov	r2, #255
 2263 0094 002083E5 		str	r2, [r3, #0]
  47:../timer.c    **** 	rTCFG1 = 0x0;		// selecciona la entrada del mux que proporciona el reloj. La 00 corresponde a un d
 2264              		.loc 1 47 0
 2265 0098 54309FE5 		ldr	r3, .L5+20
 2266 009c 0020A0E3 		mov	r2, #0
 2267 00a0 002083E5 		str	r2, [r3, #0]
  48:../timer.c    **** 	rTCNTB0 = 6250; // valor inicial de cuenta (la cuenta es descendente)
 2268              		.loc 1 48 0
 2269 00a4 4C309FE5 		ldr	r3, .L5+24
 2270 00a8 4C209FE5 		ldr	r2, .L5+28
 2271 00ac 002083E5 		str	r2, [r3, #0]
  49:../timer.c    **** 	rTCMPB0 = 0;		// valor de comparaci�n
 2272              		.loc 1 49 0
 2273 00b0 48309FE5 		ldr	r3, .L5+32
 2274 00b4 0020A0E3 		mov	r2, #0
 2275 00b8 002083E5 		str	r2, [r3, #0]
  50:../timer.c    **** 	/* establecer update=manual (bit 1) + inverter=on (�? ser� inverter off un cero en el bit 2 po
  51:../timer.c    **** 	rTCON = 0x2;
 2276              		.loc 1 51 0
 2277 00bc 40309FE5 		ldr	r3, .L5+36
 2278 00c0 0220A0E3 		mov	r2, #2
 2279 00c4 002083E5 		str	r2, [r3, #0]
  52:../timer.c    **** 	/* iniciar timer (bit 0) con auto-reload (bit 3)*/
  53:../timer.c    **** 	rTCON = 0x09;
 2280              		.loc 1 53 0
 2281 00c8 34309FE5 		ldr	r3, .L5+36
 2282 00cc 0920A0E3 		mov	r2, #9
 2283 00d0 002083E5 		str	r2, [r3, #0]
  54:../timer.c    **** }
 2284              		.loc 1 54 0
 2285 00d4 0CD04BE2 		sub	sp, fp, #12
 2286 00d8 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2287 00dc 1EFF2FE1 		bx	lr
 2288              	.L6:
 2289              		.align	2
 2290              	.L5:
 2291 00e0 0800E001 		.word	31457288
 2292 00e4 0C00E001 		.word	31457292
 2293 00e8 54FF7F0C 		.word	209715028
 2294 00ec 00000000 		.word	timer_ISR
 2295 00f0 0000D501 		.word	30736384
 2296 00f4 0400D501 		.word	30736388
 2297 00f8 0C00D501 		.word	30736396
 2298 00fc 6A180000 		.word	6250
 2299 0100 1000D501 		.word	30736400
 2300 0104 0800D501 		.word	30736392
 2301              		.cfi_endproc
 2302              	.LFE1:
 2304              		.align	2
 2305              		.global	timer1_inicializar
 2307              	timer1_inicializar:
 2308              	.LFB2:
  55:../timer.c    **** 
  56:../timer.c    **** void timer1_inicializar(void)
  57:../timer.c    **** {
 2309              		.loc 1 57 0
 2310              		.cfi_startproc
 2311              		@ Function supports interworking.
 2312              		@ args = 0, pretend = 0, frame = 0
 2313              		@ frame_needed = 1, uses_anonymous_args = 0
 2314 0108 0DC0A0E1 		mov	ip, sp
 2315              	.LCFI4:
 2316              		.cfi_def_cfa_register 12
 2317 010c 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2318 0110 04B04CE2 		sub	fp, ip, #4
 2319              		.cfi_offset 14, -8
 2320              		.cfi_offset 13, -12
 2321              		.cfi_offset 11, -16
 2322              	.LCFI5:
 2323              		.cfi_def_cfa 11, 4
  58:../timer.c    **** 	rINTMOD = 0x0; // Configura las lineas como de tipo IRQ
 2324              		.loc 1 58 0
 2325 0114 AC309FE5 		ldr	r3, .L8
 2326 0118 0020A0E3 		mov	r2, #0
 2327 011c 002083E5 		str	r2, [r3, #0]
  59:../timer.c    **** 	rINTCON = 0x1; // Habilita int. vectorizadas y la linea IRQ (FIQ no)
 2328              		.loc 1 59 0
 2329 0120 1E36A0E3 		mov	r3, #31457280
 2330 0124 0120A0E3 		mov	r2, #1
 2331 0128 002083E5 		str	r2, [r3, #0]
  60:../timer.c    **** 	rINTMSK &= ~(BIT_TIMER1);
 2332              		.loc 1 60 0
 2333 012c 98309FE5 		ldr	r3, .L8+4
 2334 0130 94209FE5 		ldr	r2, .L8+4
 2335 0134 002092E5 		ldr	r2, [r2, #0]
 2336 0138 012AC2E3 		bic	r2, r2, #4096
 2337 013c 002083E5 		str	r2, [r3, #0]
  61:../timer.c    **** 
  62:../timer.c    **** 	pISR_TIMER1 = (unsigned)timer1_ISR;
 2338              		.loc 1 62 0
 2339 0140 88309FE5 		ldr	r3, .L8+8
 2340 0144 88209FE5 		ldr	r2, .L8+12
 2341 0148 002083E5 		str	r2, [r3, #0]
  63:../timer.c    **** 
  64:../timer.c    **** 	// Configuracion del Timer1
  65:../timer.c    **** 	rTCFG0 = 255;
 2342              		.loc 1 65 0
 2343 014c 84309FE5 		ldr	r3, .L8+16
 2344 0150 FF20A0E3 		mov	r2, #255
 2345 0154 002083E5 		str	r2, [r3, #0]
  66:../timer.c    **** 	rTCFG1 = 0x0;
 2346              		.loc 1 66 0
 2347 0158 7C309FE5 		ldr	r3, .L8+20
 2348 015c 0020A0E3 		mov	r2, #0
 2349 0160 002083E5 		str	r2, [r3, #0]
  67:../timer.c    **** 
  68:../timer.c    **** 	rTCNTB1 = 64000;
 2350              		.loc 1 68 0
 2351 0164 74309FE5 		ldr	r3, .L8+24
 2352 0168 FA2CA0E3 		mov	r2, #64000
 2353 016c 002083E5 		str	r2, [r3, #0]
  69:../timer.c    **** 	rTCMPB1 = 0x0;
 2354              		.loc 1 69 0
 2355 0170 6C309FE5 		ldr	r3, .L8+28
 2356 0174 0020A0E3 		mov	r2, #0
 2357 0178 002083E5 		str	r2, [r3, #0]
  70:../timer.c    **** 
  71:../timer.c    **** 	rTCON |= (1 << 9);																				// Set bit 9 (update=manual)
 2358              		.loc 1 71 0
 2359 017c 64309FE5 		ldr	r3, .L8+32
 2360 0180 60209FE5 		ldr	r2, .L8+32
 2361 0184 002092E5 		ldr	r2, [r2, #0]
 2362 0188 022C82E3 		orr	r2, r2, #512
 2363 018c 002083E5 		str	r2, [r3, #0]
  72:../timer.c    **** 	rTCON &= ~(1 << 11);																			// Clear bit 11 (auto-reload off)
 2364              		.loc 1 72 0
 2365 0190 50309FE5 		ldr	r3, .L8+32
 2366 0194 4C209FE5 		ldr	r2, .L8+32
 2367 0198 002092E5 		ldr	r2, [r2, #0]
 2368 019c 022BC2E3 		bic	r2, r2, #2048
 2369 01a0 002083E5 		str	r2, [r3, #0]
  73:../timer.c    **** 	rTCON = (rTCON & ~(0x1 << 9)) | (0x1 << 11) | (0x1 << 8); // Clear bit 9 and set bit 11 (update=ma
 2370              		.loc 1 73 0
 2371 01a4 3C309FE5 		ldr	r3, .L8+32
 2372 01a8 38209FE5 		ldr	r2, .L8+32
 2373 01ac 002092E5 		ldr	r2, [r2, #0]
 2374 01b0 0B2CC2E3 		bic	r2, r2, #2816
 2375 01b4 092C82E3 		orr	r2, r2, #2304
 2376 01b8 002083E5 		str	r2, [r3, #0]
  74:../timer.c    **** }
 2377              		.loc 1 74 0
 2378 01bc 0CD04BE2 		sub	sp, fp, #12
 2379 01c0 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2380 01c4 1EFF2FE1 		bx	lr
 2381              	.L9:
 2382              		.align	2
 2383              	.L8:
 2384 01c8 0800E001 		.word	31457288
 2385 01cc 0C00E001 		.word	31457292
 2386 01d0 50FF7F0C 		.word	209715024
 2387 01d4 00000000 		.word	timer1_ISR
 2388 01d8 0000D501 		.word	30736384
 2389 01dc 0400D501 		.word	30736388
 2390 01e0 1800D501 		.word	30736408
 2391 01e4 1C00D501 		.word	30736412
 2392 01e8 0800D501 		.word	30736392
 2393              		.cfi_endproc
 2394              	.LFE2:
 2396              		.align	2
 2397              		.global	timer1_ISR
 2399              	timer1_ISR:
 2400              	.LFB3:
  75:../timer.c    **** 
  76:../timer.c    **** void timer1_ISR(void)
  77:../timer.c    **** {
 2401              		.loc 1 77 0
 2402              		.cfi_startproc
 2403              		@ Interrupt Service Routine.
 2404              		@ args = 0, pretend = 0, frame = 0
 2405              		@ frame_needed = 1, uses_anonymous_args = 0
 2406 01ec 04C02DE5 		str	ip, [sp, #-4]!
 2407 01f0 0DC0A0E1 		mov	ip, sp
 2408              	.LCFI6:
 2409              		.cfi_def_cfa_register 12
 2410 01f4 0CD82DE9 		stmfd	sp!, {r2, r3, fp, ip, lr, pc}
 2411 01f8 04B04CE2 		sub	fp, ip, #4
 2412              		.cfi_offset 14, -8
 2413              		.cfi_offset 13, -12
 2414              		.cfi_offset 11, -16
 2415              		.cfi_offset 3, -20
 2416              		.cfi_offset 2, -24
 2417              	.LCFI7:
 2418              		.cfi_def_cfa 11, 4
  78:../timer.c    **** 	timer1_num_int++; // Aumentar el contador de ciclos completos
 2419              		.loc 1 78 0
 2420 01fc 30309FE5 		ldr	r3, .L11
 2421 0200 003093E5 		ldr	r3, [r3, #0]
 2422 0204 012083E2 		add	r2, r3, #1
 2423 0208 24309FE5 		ldr	r3, .L11
 2424 020c 002083E5 		str	r2, [r3, #0]
  79:../timer.c    **** 
  80:../timer.c    **** 	rI_ISPC |= BIT_TIMER1; // Desactivar la solicitud de interrupcion del timer1
 2425              		.loc 1 80 0
 2426 0210 20309FE5 		ldr	r3, .L11+4
 2427 0214 1C209FE5 		ldr	r2, .L11+4
 2428 0218 002092E5 		ldr	r2, [r2, #0]
 2429 021c 012A82E3 		orr	r2, r2, #4096
 2430 0220 002083E5 		str	r2, [r3, #0]
  81:../timer.c    **** 
  82:../timer.c    **** 	//	gestionar_boton();
  83:../timer.c    **** }
 2431              		.loc 1 83 0
 2432 0224 14D04BE2 		sub	sp, fp, #20
 2433 0228 0C689DE8 		ldmfd	sp, {r2, r3, fp, sp, lr}
 2434 022c 04C09DE4 		ldmfd	sp!, {ip}
 2435 0230 04F05EE2 		subs	pc, lr, #4
 2436              	.L12:
 2437              		.align	2
 2438              	.L11:
 2439 0234 00000000 		.word	timer1_num_int
 2440 0238 2400E001 		.word	31457316
 2441              		.cfi_endproc
 2442              	.LFE3:
 2444              		.align	2
 2445              		.global	timer1_empezar
 2447              	timer1_empezar:
 2448              	.LFB4:
  84:../timer.c    **** 
  85:../timer.c    **** void timer1_empezar()
  86:../timer.c    **** {
 2449              		.loc 1 86 0
 2450              		.cfi_startproc
 2451              		@ Function supports interworking.
 2452              		@ args = 0, pretend = 0, frame = 0
 2453              		@ frame_needed = 1, uses_anonymous_args = 0
 2454 023c 0DC0A0E1 		mov	ip, sp
 2455              	.LCFI8:
 2456              		.cfi_def_cfa_register 12
 2457 0240 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2458 0244 04B04CE2 		sub	fp, ip, #4
 2459              		.cfi_offset 14, -8
 2460              		.cfi_offset 13, -12
 2461              		.cfi_offset 11, -16
 2462              	.LCFI9:
 2463              		.cfi_def_cfa 11, 4
  87:../timer.c    **** 	// Reiniciar el contador de interrupciones
  88:../timer.c    **** 	timer1_num_int = 0;
 2464              		.loc 1 88 0
 2465 0248 58309FE5 		ldr	r3, .L14
 2466 024c 0020A0E3 		mov	r2, #0
 2467 0250 002083E5 		str	r2, [r3, #0]
  89:../timer.c    **** 
  90:../timer.c    **** 	// Reiniciar el valor del contador del timer1
  91:../timer.c    **** 	rTCNTB1 = 64000;
 2468              		.loc 1 91 0
 2469 0254 50309FE5 		ldr	r3, .L14+4
 2470 0258 FA2CA0E3 		mov	r2, #64000
 2471 025c 002083E5 		str	r2, [r3, #0]
  92:../timer.c    **** 
  93:../timer.c    **** 	// Establecer update=manual (bit 9) para reiniciar el contador
  94:../timer.c    **** 	rTCON |= (0x1 << 9);
 2472              		.loc 1 94 0
 2473 0260 48309FE5 		ldr	r3, .L14+8
 2474 0264 44209FE5 		ldr	r2, .L14+8
 2475 0268 002092E5 		ldr	r2, [r2, #0]
 2476 026c 022C82E3 		orr	r2, r2, #512
 2477 0270 002083E5 		str	r2, [r3, #0]
  95:../timer.c    **** 
  96:../timer.c    **** 	// Iniciar el timer1 (bit 8)
  97:../timer.c    **** 	rTCON |= (0x1 << 8);
 2478              		.loc 1 97 0
 2479 0274 34309FE5 		ldr	r3, .L14+8
 2480 0278 30209FE5 		ldr	r2, .L14+8
 2481 027c 002092E5 		ldr	r2, [r2, #0]
 2482 0280 012C82E3 		orr	r2, r2, #256
 2483 0284 002083E5 		str	r2, [r3, #0]
  98:../timer.c    **** 
  99:../timer.c    **** 	// Desactivar el bit de update manual para permitir el funcionamiento normal
 100:../timer.c    **** 	rTCON &= ~0x100;
 2484              		.loc 1 100 0
 2485 0288 20309FE5 		ldr	r3, .L14+8
 2486 028c 1C209FE5 		ldr	r2, .L14+8
 2487 0290 002092E5 		ldr	r2, [r2, #0]
 2488 0294 012CC2E3 		bic	r2, r2, #256
 2489 0298 002083E5 		str	r2, [r3, #0]
 101:../timer.c    **** }
 2490              		.loc 1 101 0
 2491 029c 0CD04BE2 		sub	sp, fp, #12
 2492 02a0 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2493 02a4 1EFF2FE1 		bx	lr
 2494              	.L15:
 2495              		.align	2
 2496              	.L14:
 2497 02a8 00000000 		.word	timer1_num_int
 2498 02ac 1800D501 		.word	30736408
 2499 02b0 0800D501 		.word	30736392
 2500              		.cfi_endproc
 2501              	.LFE4:
 2503              		.align	2
 2504              		.global	timer1_leer
 2506              	timer1_leer:
 2507              	.LFB5:
 102:../timer.c    **** 
 103:../timer.c    **** unsigned int timer1_leer()
 104:../timer.c    **** {
 2508              		.loc 1 104 0
 2509              		.cfi_startproc
 2510              		@ Function supports interworking.
 2511              		@ args = 0, pretend = 0, frame = 8
 2512              		@ frame_needed = 1, uses_anonymous_args = 0
 2513 02b4 0DC0A0E1 		mov	ip, sp
 2514              	.LCFI10:
 2515              		.cfi_def_cfa_register 12
 2516 02b8 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2517 02bc 04B04CE2 		sub	fp, ip, #4
 2518              		.cfi_offset 14, -8
 2519              		.cfi_offset 13, -12
 2520              		.cfi_offset 11, -16
 2521              	.LCFI11:
 2522              		.cfi_def_cfa 11, 4
 2523 02c0 08D04DE2 		sub	sp, sp, #8
 105:../timer.c    **** 
 106:../timer.c    **** 	unsigned int valor_cuenta = rTCNTO1; // Leer el valor actual del contador
 2524              		.loc 1 106 0
 2525 02c4 3C309FE5 		ldr	r3, .L17
 2526 02c8 003093E5 		ldr	r3, [r3, #0]
 2527 02cc 10300BE5 		str	r3, [fp, #-16]
 107:../timer.c    **** 	// Calcular el tiempo transcurrido en el timer1
 108:../timer.c    **** 	// timer1_num_int * 64000 es el total de ticks de los ciclos completos
 109:../timer.c    **** 	// (2.0 / 33.0) es el factor de conversion de ticks a microsegundos
 110:../timer.c    **** 	unsigned int tiempo_transcurrido = (timer1_num_int * 65536) + (65535 - valor_cuenta);
 2528              		.loc 1 110 0
 2529 02d0 34309FE5 		ldr	r3, .L17+4
 2530 02d4 003093E5 		ldr	r3, [r3, #0]
 2531 02d8 0338A0E1 		mov	r3, r3, asl #16
 2532 02dc 0320A0E1 		mov	r2, r3
 2533 02e0 10301BE5 		ldr	r3, [fp, #-16]
 2534 02e4 023063E0 		rsb	r3, r3, r2
 2535 02e8 FF3C83E2 		add	r3, r3, #65280
 2536 02ec FF3083E2 		add	r3, r3, #255
 2537 02f0 14300BE5 		str	r3, [fp, #-20]
 111:../timer.c    **** 
 112:../timer.c    **** 	return tiempo_transcurrido;
 2538              		.loc 1 112 0
 2539 02f4 14301BE5 		ldr	r3, [fp, #-20]
 113:../timer.c    **** }
 2540              		.loc 1 113 0
 2541 02f8 0300A0E1 		mov	r0, r3
 2542 02fc 0CD04BE2 		sub	sp, fp, #12
 2543 0300 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2544 0304 1EFF2FE1 		bx	lr
 2545              	.L18:
 2546              		.align	2
 2547              	.L17:
 2548 0308 2000D501 		.word	30736416
 2549 030c 00000000 		.word	timer1_num_int
 2550              		.cfi_endproc
 2551              	.LFE5:
 2553              		.align	2
 2554              		.global	timer1_parar
 2556              	timer1_parar:
 2557              	.LFB6:
 114:../timer.c    **** 
 115:../timer.c    **** unsigned int timer1_parar()
 116:../timer.c    **** {
 2558              		.loc 1 116 0
 2559              		.cfi_startproc
 2560              		@ Function supports interworking.
 2561              		@ args = 0, pretend = 0, frame = 0
 2562              		@ frame_needed = 1, uses_anonymous_args = 0
 2563 0310 0DC0A0E1 		mov	ip, sp
 2564              	.LCFI12:
 2565              		.cfi_def_cfa_register 12
 2566 0314 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2567 0318 04B04CE2 		sub	fp, ip, #4
 2568              		.cfi_offset 14, -8
 2569              		.cfi_offset 13, -12
 2570              		.cfi_offset 11, -16
 2571              	.LCFI13:
 2572              		.cfi_def_cfa 11, 4
 117:../timer.c    **** 	rTCON &= ~(0x1 << 8); // Desactivar el timer 1 (bit 9 y 11)
 2573              		.loc 1 117 0
 2574 031c 24309FE5 		ldr	r3, .L20
 2575 0320 20209FE5 		ldr	r2, .L20
 2576 0324 002092E5 		ldr	r2, [r2, #0]
 2577 0328 012CC2E3 		bic	r2, r2, #256
 2578 032c 002083E5 		str	r2, [r3, #0]
 118:../timer.c    **** 
 119:../timer.c    **** 	return timer1_leer();
 2579              		.loc 1 119 0
 2580 0330 FEFFFFEB 		bl	timer1_leer
 2581 0334 0030A0E1 		mov	r3, r0
 120:../timer.c    **** }
 2582              		.loc 1 120 0
 2583 0338 0300A0E1 		mov	r0, r3
 2584 033c 0CD04BE2 		sub	sp, fp, #12
 2585 0340 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2586 0344 1EFF2FE1 		bx	lr
 2587              	.L21:
 2588              		.align	2
 2589              	.L20:
 2590 0348 0800D501 		.word	30736392
 2591              		.cfi_endproc
 2592              	.LFE6:
 2594              		.align	2
 2595              		.global	timer2_ISR
 2597              	timer2_ISR:
 2598              	.LFB7:
 121:../timer.c    **** 
 122:../timer.c    **** void timer2_ISR(void)
 123:../timer.c    **** {
 2599              		.loc 1 123 0
 2600              		.cfi_startproc
 2601              		@ Interrupt Service Routine.
 2602              		@ args = 0, pretend = 0, frame = 0
 2603              		@ frame_needed = 1, uses_anonymous_args = 0
 2604 034c 04C02DE5 		str	ip, [sp, #-4]!
 2605 0350 0DC0A0E1 		mov	ip, sp
 2606              	.LCFI14:
 2607              		.cfi_def_cfa_register 12
 2608 0354 0FD82DE9 		stmfd	sp!, {r0, r1, r2, r3, fp, ip, lr, pc}
 2609 0358 04B04CE2 		sub	fp, ip, #4
 2610              		.cfi_offset 14, -8
 2611              		.cfi_offset 13, -12
 2612              		.cfi_offset 11, -16
 2613              		.cfi_offset 3, -20
 2614              		.cfi_offset 2, -24
 2615              		.cfi_offset 1, -28
 2616              		.cfi_offset 0, -32
 2617              	.LCFI15:
 2618              		.cfi_def_cfa 11, 4
 124:../timer.c    **** 	led_event_counter++;
 2619              		.loc 1 124 0
 2620 035c 70309FE5 		ldr	r3, .L26
 2621 0360 003093E5 		ldr	r3, [r3, #0]
 2622 0364 012083E2 		add	r2, r3, #1
 2623 0368 64309FE5 		ldr	r3, .L26
 2624 036c 002083E5 		str	r2, [r3, #0]
 125:../timer.c    **** 
 126:../timer.c    **** 	if (led_event_counter < 200) // Encender durante 40 eventos (500 ms)
 2625              		.loc 1 126 0
 2626 0370 5C309FE5 		ldr	r3, .L26
 2627 0374 003093E5 		ldr	r3, [r3, #0]
 2628 0378 C70053E3 		cmp	r3, #199
 2629 037c 010000CA 		bgt	.L23
 2630              	.LBB2:
 127:../timer.c    **** 	{
 128:../timer.c    **** 		led2_on();
 2631              		.loc 1 128 0
 2632 0380 FEFFFFEB 		bl	led2_on
 2633 0384 090000EA 		b	.L24
 2634              	.L23:
 2635              	.LBE2:
 129:../timer.c    **** 	}
 130:../timer.c    **** 	else if (led_event_counter < 400) // Apagar durante 40 eventos (500 ms)
 2636              		.loc 1 130 0
 2637 0388 44309FE5 		ldr	r3, .L26
 2638 038c 002093E5 		ldr	r2, [r3, #0]
 2639 0390 40309FE5 		ldr	r3, .L26+4
 2640 0394 030052E1 		cmp	r2, r3
 2641 0398 010000CA 		bgt	.L25
 2642              	.LBB3:
 131:../timer.c    **** 	{
 132:../timer.c    **** 		led2_off();
 2643              		.loc 1 132 0
 2644 039c FEFFFFEB 		bl	led2_off
 2645 03a0 020000EA 		b	.L24
 2646              	.L25:
 2647              	.LBE3:
 133:../timer.c    **** 	}
 134:../timer.c    **** 	else
 135:../timer.c    **** 	{
 136:../timer.c    **** 		led_event_counter = 0; // Reiniciar el contador después de 160 eventos (2 segundos)
 2648              		.loc 1 136 0
 2649 03a4 28309FE5 		ldr	r3, .L26
 2650 03a8 0020A0E3 		mov	r2, #0
 2651 03ac 002083E5 		str	r2, [r3, #0]
 2652              	.L24:
 137:../timer.c    **** 	}
 138:../timer.c    **** 
 139:../timer.c    **** 	rI_ISPC |= BIT_TIMER2; // Limpiar la interrupción
 2653              		.loc 1 139 0
 2654 03b0 24309FE5 		ldr	r3, .L26+8
 2655 03b4 20209FE5 		ldr	r2, .L26+8
 2656 03b8 002092E5 		ldr	r2, [r2, #0]
 2657 03bc 022B82E3 		orr	r2, r2, #2048
 2658 03c0 002083E5 		str	r2, [r3, #0]
 140:../timer.c    **** }
 2659              		.loc 1 140 0
 2660 03c4 1CD04BE2 		sub	sp, fp, #28
 2661 03c8 0F689DE8 		ldmfd	sp, {r0, r1, r2, r3, fp, sp, lr}
 2662 03cc 04C09DE4 		ldmfd	sp!, {ip}
 2663 03d0 04F05EE2 		subs	pc, lr, #4
 2664              	.L27:
 2665              		.align	2
 2666              	.L26:
 2667 03d4 00000000 		.word	led_event_counter
 2668 03d8 8F010000 		.word	399
 2669 03dc 2400E001 		.word	31457316
 2670              		.cfi_endproc
 2671              	.LFE7:
 2673              		.align	2
 2674              		.global	timer2_init
 2676              	timer2_init:
 2677              	.LFB8:
 141:../timer.c    **** 
 142:../timer.c    **** void timer2_init(void)
 143:../timer.c    **** {
 2678              		.loc 1 143 0
 2679              		.cfi_startproc
 2680              		@ Function supports interworking.
 2681              		@ args = 0, pretend = 0, frame = 0
 2682              		@ frame_needed = 1, uses_anonymous_args = 0
 2683 03e0 0DC0A0E1 		mov	ip, sp
 2684              	.LCFI16:
 2685              		.cfi_def_cfa_register 12
 2686 03e4 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2687 03e8 04B04CE2 		sub	fp, ip, #4
 2688              		.cfi_offset 14, -8
 2689              		.cfi_offset 13, -12
 2690              		.cfi_offset 11, -16
 2691              	.LCFI17:
 2692              		.cfi_def_cfa 11, 4
 144:../timer.c    **** 	rINTMOD = 0x0;
 2693              		.loc 1 144 0
 2694 03ec AC309FE5 		ldr	r3, .L29
 2695 03f0 0020A0E3 		mov	r2, #0
 2696 03f4 002083E5 		str	r2, [r3, #0]
 145:../timer.c    **** 	rINTCON = 0x1;
 2697              		.loc 1 145 0
 2698 03f8 1E36A0E3 		mov	r3, #31457280
 2699 03fc 0120A0E3 		mov	r2, #1
 2700 0400 002083E5 		str	r2, [r3, #0]
 146:../timer.c    **** 	rINTMSK &= ~(BIT_TIMER2);
 2701              		.loc 1 146 0
 2702 0404 98309FE5 		ldr	r3, .L29+4
 2703 0408 94209FE5 		ldr	r2, .L29+4
 2704 040c 002092E5 		ldr	r2, [r2, #0]
 2705 0410 022BC2E3 		bic	r2, r2, #2048
 2706 0414 002083E5 		str	r2, [r3, #0]
 147:../timer.c    **** 
 148:../timer.c    **** 	pISR_TIMER2 = (unsigned)timer2_ISR;
 2707              		.loc 1 148 0
 2708 0418 88309FE5 		ldr	r3, .L29+8
 2709 041c 88209FE5 		ldr	r2, .L29+12
 2710 0420 002083E5 		str	r2, [r3, #0]
 149:../timer.c    **** 
 150:../timer.c    **** 	rTCFG0 = 0x8;
 2711              		.loc 1 150 0
 2712 0424 84309FE5 		ldr	r3, .L29+16
 2713 0428 0820A0E3 		mov	r2, #8
 2714 042c 002083E5 		str	r2, [r3, #0]
 151:../timer.c    **** 	rTCFG1 = 0x0;
 2715              		.loc 1 151 0
 2716 0430 7C309FE5 		ldr	r3, .L29+20
 2717 0434 0020A0E3 		mov	r2, #0
 2718 0438 002083E5 		str	r2, [r3, #0]
 152:../timer.c    **** 
 153:../timer.c    **** 	rTCNTB2 = 100000;
 2719              		.loc 1 153 0
 2720 043c 74309FE5 		ldr	r3, .L29+24
 2721 0440 74209FE5 		ldr	r2, .L29+28
 2722 0444 002083E5 		str	r2, [r3, #0]
 154:../timer.c    **** 	rTCMPB2 = 0x0;
 2723              		.loc 1 154 0
 2724 0448 70309FE5 		ldr	r3, .L29+32
 2725 044c 0020A0E3 		mov	r2, #0
 2726 0450 002083E5 		str	r2, [r3, #0]
 155:../timer.c    **** 
 156:../timer.c    **** 	rTCON |= (1 << 13); // Actualización manual
 2727              		.loc 1 156 0
 2728 0454 68309FE5 		ldr	r3, .L29+36
 2729 0458 64209FE5 		ldr	r2, .L29+36
 2730 045c 002092E5 		ldr	r2, [r2, #0]
 2731 0460 022A82E3 		orr	r2, r2, #8192
 2732 0464 002083E5 		str	r2, [r3, #0]
 157:../timer.c    **** 	rTCON &= ~(1 << 15);
 2733              		.loc 1 157 0
 2734 0468 54309FE5 		ldr	r3, .L29+36
 2735 046c 50209FE5 		ldr	r2, .L29+36
 2736 0470 002092E5 		ldr	r2, [r2, #0]
 2737 0474 0229C2E3 		bic	r2, r2, #32768
 2738 0478 002083E5 		str	r2, [r3, #0]
 158:../timer.c    **** 
 159:../timer.c    **** 	rTCON = (rTCON & ~(0x1 << 13)) | (0x1 << 15) | (0x1 << 12); // Auto-reload y Start
 2739              		.loc 1 159 0
 2740 047c 40309FE5 		ldr	r3, .L29+36
 2741 0480 3C209FE5 		ldr	r2, .L29+36
 2742 0484 002092E5 		ldr	r2, [r2, #0]
 2743 0488 0B2AC2E3 		bic	r2, r2, #45056
 2744 048c 092A82E3 		orr	r2, r2, #36864
 2745 0490 002083E5 		str	r2, [r3, #0]
 160:../timer.c    **** }
 2746              		.loc 1 160 0
 2747 0494 0CD04BE2 		sub	sp, fp, #12
 2748 0498 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2749 049c 1EFF2FE1 		bx	lr
 2750              	.L30:
 2751              		.align	2
 2752              	.L29:
 2753 04a0 0800E001 		.word	31457288
 2754 04a4 0C00E001 		.word	31457292
 2755 04a8 4CFF7F0C 		.word	209715020
 2756 04ac 00000000 		.word	timer2_ISR
 2757 04b0 0000D501 		.word	30736384
 2758 04b4 0400D501 		.word	30736388
 2759 04b8 2400D501 		.word	30736420
 2760 04bc A0860100 		.word	100000
 2761 04c0 2800D501 		.word	30736424
 2762 04c4 0800D501 		.word	30736392
 2763              		.cfi_endproc
 2764              	.LFE8:
 2766              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 timer.c
                            *COM*:00000004 switch_leds
C:\Users\Jorge\AppData\Local\Temp\ccqnYTvJ.s:2160   .bss:00000000 timer1_num_int
C:\Users\Jorge\AppData\Local\Temp\ccqnYTvJ.s:2157   .bss:00000000 $d
C:\Users\Jorge\AppData\Local\Temp\ccqnYTvJ.s:2166   .data:00000000 timer_event
C:\Users\Jorge\AppData\Local\Temp\ccqnYTvJ.s:2173   .bss:00000004 led_event_counter
C:\Users\Jorge\AppData\Local\Temp\ccqnYTvJ.s:2176   .text:00000000 $a
C:\Users\Jorge\AppData\Local\Temp\ccqnYTvJ.s:2179   .text:00000000 timer_ISR
C:\Users\Jorge\AppData\Local\Temp\ccqnYTvJ.s:2217   .text:00000040 $d
C:\Users\Jorge\AppData\Local\Temp\ccqnYTvJ.s:2222   .text:00000048 $a
C:\Users\Jorge\AppData\Local\Temp\ccqnYTvJ.s:2225   .text:00000048 timer_init
C:\Users\Jorge\AppData\Local\Temp\ccqnYTvJ.s:2291   .text:000000e0 $d
C:\Users\Jorge\AppData\Local\Temp\ccqnYTvJ.s:2304   .text:00000108 $a
C:\Users\Jorge\AppData\Local\Temp\ccqnYTvJ.s:2307   .text:00000108 timer1_inicializar
C:\Users\Jorge\AppData\Local\Temp\ccqnYTvJ.s:2384   .text:000001c8 $d
C:\Users\Jorge\AppData\Local\Temp\ccqnYTvJ.s:2399   .text:000001ec timer1_ISR
C:\Users\Jorge\AppData\Local\Temp\ccqnYTvJ.s:2396   .text:000001ec $a
C:\Users\Jorge\AppData\Local\Temp\ccqnYTvJ.s:2439   .text:00000234 $d
C:\Users\Jorge\AppData\Local\Temp\ccqnYTvJ.s:2444   .text:0000023c $a
C:\Users\Jorge\AppData\Local\Temp\ccqnYTvJ.s:2447   .text:0000023c timer1_empezar
C:\Users\Jorge\AppData\Local\Temp\ccqnYTvJ.s:2497   .text:000002a8 $d
C:\Users\Jorge\AppData\Local\Temp\ccqnYTvJ.s:2503   .text:000002b4 $a
C:\Users\Jorge\AppData\Local\Temp\ccqnYTvJ.s:2506   .text:000002b4 timer1_leer
C:\Users\Jorge\AppData\Local\Temp\ccqnYTvJ.s:2548   .text:00000308 $d
C:\Users\Jorge\AppData\Local\Temp\ccqnYTvJ.s:2553   .text:00000310 $a
C:\Users\Jorge\AppData\Local\Temp\ccqnYTvJ.s:2556   .text:00000310 timer1_parar
C:\Users\Jorge\AppData\Local\Temp\ccqnYTvJ.s:2590   .text:00000348 $d
C:\Users\Jorge\AppData\Local\Temp\ccqnYTvJ.s:2594   .text:0000034c $a
C:\Users\Jorge\AppData\Local\Temp\ccqnYTvJ.s:2597   .text:0000034c timer2_ISR
C:\Users\Jorge\AppData\Local\Temp\ccqnYTvJ.s:2667   .text:000003d4 $d
C:\Users\Jorge\AppData\Local\Temp\ccqnYTvJ.s:2673   .text:000003e0 $a
C:\Users\Jorge\AppData\Local\Temp\ccqnYTvJ.s:2676   .text:000003e0 timer2_init
C:\Users\Jorge\AppData\Local\Temp\ccqnYTvJ.s:2753   .text:000004a0 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
led2_on
led2_off
